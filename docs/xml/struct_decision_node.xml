<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_decision_node" kind="struct" language="C++" prot="public">
    <compoundname>DecisionNode</compoundname>
    <includes refid="_decision_node_8h" local="no">DecisionNode.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_decision_node_1aa8ff3eafda21da952e69bb1774909b15" prot="public" static="no" mutable="no">
        <type><ref refid="struct_decision_node" kindref="compound">DecisionNode</ref> *</type>
        <definition>DecisionNode* DecisionNode::left</definition>
        <argsstring></argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionNode.h" line="29" column="18" bodyfile="DecisionNode.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_decision_node_1a32e5abe9620deaeefa3e191089cf1c61" prot="public" static="no" mutable="no">
        <type><ref refid="struct_decision_node" kindref="compound">DecisionNode</ref> *</type>
        <definition>DecisionNode* DecisionNode::right</definition>
        <argsstring></argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionNode.h" line="30" column="18" bodyfile="DecisionNode.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_decision_node_1a81f4a44c462204a52febaf41d76f77a9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int DecisionNode::splitColumn</definition>
        <argsstring></argsstring>
        <name>splitColumn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionNode.h" line="31" column="9" bodyfile="DecisionNode.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_decision_node_1a3844dca69b4183e45e96265b20f5845d" prot="public" static="no" mutable="no">
        <type><ref refid="struct_generic" kindref="compound">Generic</ref> *</type>
        <definition>Generic* DecisionNode::splitValue</definition>
        <argsstring></argsstring>
        <name>splitValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionNode.h" line="32" column="13" bodyfile="DecisionNode.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_decision_node_1a5fd99d72d9eacc776fd84afdb0c219bd" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double DecisionNode::splitLoss</definition>
        <argsstring></argsstring>
        <name>splitLoss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionNode.h" line="33" column="12" bodyfile="DecisionNode.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_decision_node_1a5a5304f349569d2c403ebdb08e35fee2" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int DecisionNode::sampleSize</definition>
        <argsstring></argsstring>
        <name>sampleSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionNode.h" line="34" column="9" bodyfile="DecisionNode.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_decision_node_1afe144bf52954cedad6a062ca5ec7119d" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; DecisionNode::values</definition>
        <argsstring></argsstring>
        <name>values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionNode.h" line="35" column="17" bodyfile="DecisionNode.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_decision_node_1a6609df7b1cba89c94a561cacac41bbfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DecisionNode::DecisionNode</definition>
        <argsstring>(double splitLoss, std::vector&lt; double &gt; values, int splitColumn=0, Generic *splitValue=nullptr, DecisionNode *left=nullptr, DecisionNode *right=nullptr)</argsstring>
        <name>DecisionNode</name>
        <param>
          <type>double</type>
          <declname>splitLoss</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>int</type>
          <declname>splitColumn</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="struct_generic" kindref="compound">Generic</ref> *</type>
          <declname>splitValue</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="struct_decision_node" kindref="compound">DecisionNode</ref> *</type>
          <declname>left</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="struct_decision_node" kindref="compound">DecisionNode</ref> *</type>
          <declname>right</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="struct_decision_node" kindref="compound">DecisionNode</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>splitLoss</parametername>
</parameternamelist>
<parameterdescription>
<para>Used for optimizing the fit of a decision tree. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>An array containing the expected value (mean) or the counts of each class for DecisionTreeRegressor and <ref refid="class_decision_tree_classifier" kindref="compound">DecisionTreeClassifier</ref>, respectively. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index used for splitting the node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The row value used for splitting the node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that represents true for comparison. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that represents false for comparison. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionNode.h" line="49" column="5" bodyfile="DecisionNode.cpp" bodystart="17" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="struct_decision_node_1ac04c4b5d210f35fc11ad876a1835c691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DecisionNode::isLeaf</definition>
        <argsstring>()</argsstring>
        <name>isLeaf</name>
        <briefdescription>
<para>Determines whethers node is a leaf node. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true a leaf node. </para>
</simplesect>
<simplesect kind="return"><para>false not a leaf node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionNode.h" line="64" column="10" bodyfile="DecisionNode.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>DecisionNodes can either be branches or leafs. Branch nodes store data used to instruct the traversal of the decision tree. The data used for traversal are a column index of a <ref refid="class_data_frame" kindref="compound">DataFrame</ref> and a row value. Both of these are used for comparison with new data to go left (true) or right (false). Leaf nodes contain data used for prediction. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>DecisionNode</label>
        <link refid="struct_decision_node"/>
        <childnode refid="2" relation="usage">
          <edgelabel>splitValue</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>left</edgelabel>
          <edgelabel>right</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Generic</label>
        <link refid="struct_generic"/>
      </node>
    </collaborationgraph>
    <location file="DecisionNode.h" line="28" column="1" bodyfile="DecisionNode.h" bodystart="28" bodyend="65"/>
    <listofallmembers>
      <member refid="struct_decision_node_1a6609df7b1cba89c94a561cacac41bbfc" prot="public" virt="non-virtual"><scope>DecisionNode</scope><name>DecisionNode</name></member>
      <member refid="struct_decision_node_1ac04c4b5d210f35fc11ad876a1835c691" prot="public" virt="non-virtual"><scope>DecisionNode</scope><name>isLeaf</name></member>
      <member refid="struct_decision_node_1aa8ff3eafda21da952e69bb1774909b15" prot="public" virt="non-virtual"><scope>DecisionNode</scope><name>left</name></member>
      <member refid="struct_decision_node_1a32e5abe9620deaeefa3e191089cf1c61" prot="public" virt="non-virtual"><scope>DecisionNode</scope><name>right</name></member>
      <member refid="struct_decision_node_1a5a5304f349569d2c403ebdb08e35fee2" prot="public" virt="non-virtual"><scope>DecisionNode</scope><name>sampleSize</name></member>
      <member refid="struct_decision_node_1a81f4a44c462204a52febaf41d76f77a9" prot="public" virt="non-virtual"><scope>DecisionNode</scope><name>splitColumn</name></member>
      <member refid="struct_decision_node_1a5fd99d72d9eacc776fd84afdb0c219bd" prot="public" virt="non-virtual"><scope>DecisionNode</scope><name>splitLoss</name></member>
      <member refid="struct_decision_node_1a3844dca69b4183e45e96265b20f5845d" prot="public" virt="non-virtual"><scope>DecisionNode</scope><name>splitValue</name></member>
      <member refid="struct_decision_node_1afe144bf52954cedad6a062ca5ec7119d" prot="public" virt="non-virtual"><scope>DecisionNode</scope><name>values</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
