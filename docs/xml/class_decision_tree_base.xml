<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_decision_tree_base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>DecisionTreeBase</compoundname>
    <derivedcompoundref refid="class_decision_tree_classifier" prot="public" virt="non-virtual">DecisionTreeClassifier</derivedcompoundref>
    <includes refid="_decision_tree_base_8h" local="no">DecisionTreeBase.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_decision_tree_base_1a6db910b5567338562e596c870696c3e1" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DecisionTreeBase::lossCriterion</definition>
        <argsstring></argsstring>
        <name>lossCriterion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="30" column="17" bodyfile="DecisionTreeBase.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_decision_tree_base_1a099475851e6198e7198ca20524634786" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int DecisionTreeBase::maxDepth</definition>
        <argsstring></argsstring>
        <name>maxDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="31" column="9" bodyfile="DecisionTreeBase.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_decision_tree_base_1a0a818f4869e92888dd574519b80c8320" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int DecisionTreeBase::minSamplesSplit</definition>
        <argsstring></argsstring>
        <name>minSamplesSplit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="32" column="9" bodyfile="DecisionTreeBase.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_decision_tree_base_1ae09daa3628fa091d5cb363f25aa622d1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int DecisionTreeBase::minSamplesLeaf</definition>
        <argsstring></argsstring>
        <name>minSamplesLeaf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="33" column="9" bodyfile="DecisionTreeBase.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_decision_tree_base_1a4eb86c16f490bce74b9cae0515ab7a57" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DecisionTreeBase::maxFeatures</definition>
        <argsstring></argsstring>
        <name>maxFeatures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="34" column="12" bodyfile="DecisionTreeBase.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_decision_tree_base_1ac53d0dceba29023ab1549e9b9d99ec21" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DecisionTreeBase::minImpurityDecrease</definition>
        <argsstring></argsstring>
        <name>minImpurityDecrease</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="35" column="12" bodyfile="DecisionTreeBase.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_decision_tree_base_1a0b398b02b7198ec636c1943258739d0c" prot="private" static="no" mutable="no">
        <type>int *</type>
        <definition>int* DecisionTreeBase::featureImportance</definition>
        <argsstring></argsstring>
        <name>featureImportance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="36" column="9" bodyfile="DecisionTreeBase.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_decision_tree_base_1aa23536b4de629085e0609a013fccc25e" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_decision_node" kindref="compound">DecisionNode</ref> *</type>
        <definition>DecisionNode* DecisionTreeBase::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="83" column="18" bodyfile="DecisionTreeBase.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_decision_tree_base_1a047b0ea407cff2e50a53306c10a12910" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DecisionTreeBase::findSplit</definition>
        <argsstring>(DataFrame *trainData, int &amp;bestRow, int &amp;bestCol, double minLoss)</argsstring>
        <name>findSplit</name>
        <param>
          <type><ref refid="class_data_frame" kindref="compound">DataFrame</ref> *</type>
          <declname>trainData</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>bestRow</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>bestCol</declname>
        </param>
        <param>
          <type>double</type>
          <declname>minLoss</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="37" column="10" bodyfile="DecisionTreeBase.cpp" bodystart="36" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_decision_tree_base_1a455e5c82b367bf2bdaf8018a3e277599" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DecisionTreeBase::fit</definition>
        <argsstring>(DataFrame *trainData, DecisionNode *&amp;node)</argsstring>
        <name>fit</name>
        <param>
          <type><ref refid="class_data_frame" kindref="compound">DataFrame</ref> *</type>
          <declname>trainData</declname>
        </param>
        <param>
          <type><ref refid="struct_decision_node" kindref="compound">DecisionNode</ref> *&amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="38" column="10" bodyfile="DecisionTreeBase.cpp" bodystart="85" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_decision_tree_base_1ad7d66f6b761f0011b3d140eeae5c9109" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DecisionTreeBase::printTree</definition>
        <argsstring>(DecisionNode *node, int indents)</argsstring>
        <name>printTree</name>
        <param>
          <type><ref refid="struct_decision_node" kindref="compound">DecisionNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="39" column="10" bodyfile="DecisionTreeBase.cpp" bodystart="137" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_decision_tree_base_1ab5d14c08c731cca3cd7f55b4d3d58107" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double DecisionTreeBase::computeLoss</definition>
        <argsstring>(std::vector&lt; double &gt;)=0</argsstring>
        <name>computeLoss</name>
        <reimplementedby refid="class_decision_tree_classifier_1a44170169e39c35485b1f56f3c99ffaea">computeLoss</reimplementedby>
        <param>
          <type>std::vector&lt; double &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="40" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_decision_tree_base_1a2142440633f0b8c30519cbe2807d162b" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>virtual std::vector&lt;double&gt; DecisionTreeBase::getTruthVector</definition>
        <argsstring>(DataFrame *)=0</argsstring>
        <name>getTruthVector</name>
        <reimplementedby refid="class_decision_tree_classifier_1ad2940b297018a4086093c3385c93e5ee">getTruthVector</reimplementedby>
        <param>
          <type><ref refid="class_data_frame" kindref="compound">DataFrame</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="41" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_decision_tree_base_1a1310b75d0f505e481c31c8302f88e5ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void DecisionTreeBase::printTruthVector</definition>
        <argsstring>(std::vector&lt; double &gt; truthVector)=0</argsstring>
        <name>printTruthVector</name>
        <reimplementedby refid="class_decision_tree_classifier_1a911c4a434b9984e745dd1c301023bb48">printTruthVector</reimplementedby>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>truthVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="42" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_decision_tree_base_1a3ddba18e63e6835511456cc714de4360" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DecisionTreeBase::printSpaces</definition>
        <argsstring>(int indents)</argsstring>
        <name>printSpaces</name>
        <param>
          <type>int</type>
          <declname>indents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="43" column="10" bodyfile="DecisionTreeBase.cpp" bodystart="131" bodyend="135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_decision_tree_base_1a4d578791f7c387597de6cd2c88e651dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DecisionTreeBase::DecisionTreeBase</definition>
        <argsstring>(std::string lossCriterion, double maxFeatures, int minSamplesSplit, int maxDepth, int minSamplesLeaf, double minImpurityDecrease)</argsstring>
        <name>DecisionTreeBase</name>
        <param>
          <type>std::string</type>
          <declname>lossCriterion</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxFeatures</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minSamplesSplit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxDepth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minSamplesLeaf</declname>
        </param>
        <param>
          <type>double</type>
          <declname>minImpurityDecrease</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="class_decision_tree_base" kindref="compound">DecisionTreeBase</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lossCriterion</parametername>
</parameternamelist>
<parameterdescription>
<para>type of loss calculation used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxFeatures</parametername>
</parameternamelist>
<parameterdescription>
<para>number of features used for splitting a node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minSamplesSplit</parametername>
</parameternamelist>
<parameterdescription>
<para>minimun number of samples at root to consider splitting </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxDepth</parametername>
</parameternamelist>
<parameterdescription>
<para>maxiumum depth of the decision tree </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minSamplesLeaf</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum number of samples in child leafs to consider the split </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minImpurityDecrease</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum improvement in loss calculation to consider the split </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="58" column="5" bodyfile="DecisionTreeBase.cpp" bodystart="19" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_decision_tree_base_1a0b752054d30cfe21d5eac24dd97ae878" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void DecisionTreeBase::fit</definition>
        <argsstring>(DataFrame *trainData)</argsstring>
        <name>fit</name>
        <reimplementedby refid="class_decision_tree_classifier_1af76eb8d3bbd69bbb0c0bf140439f4701">fit</reimplementedby>
        <param>
          <type><ref refid="class_data_frame" kindref="compound">DataFrame</ref> *</type>
          <declname>trainData</declname>
        </param>
        <briefdescription>
<para>This method creates the decision tree, which can be used later for prediction. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>fit() assumes computeLoss() private method is implemented by the child class. Otherwise, the user can implement their own fit() if they have a different algorithm for constructing a decision tree.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trainData</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="77" column="18" bodyfile="DecisionTreeBase.cpp" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_decision_tree_base_1a432499dfd7ba508508f7c77e430e829f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_data_frame" kindref="compound">DataFrame</ref> *</type>
        <definition>virtual DataFrame* DecisionTreeBase::predict</definition>
        <argsstring>(DataFrame *testData)=0</argsstring>
        <name>predict</name>
        <reimplementedby refid="class_decision_tree_classifier_1ae6ff8f56919a524127691abe1ea49a95">predict</reimplementedby>
        <param>
          <type><ref refid="class_data_frame" kindref="compound">DataFrame</ref> *</type>
          <declname>testData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="78" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_decision_tree_base_1a18c2eac8ecee3c67c06d7cce3aa00dcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>string DecisionTreeBase::getLossCriterion</definition>
        <argsstring>() const</argsstring>
        <name>getLossCriterion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="79" column="17" bodyfile="DecisionTreeBase.cpp" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_decision_tree_base_1a73a58b0c975ca8d23275026fe154e6c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DecisionTreeBase::printTree</definition>
        <argsstring>()</argsstring>
        <name>printTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="DecisionTreeBase.h" line="80" column="10" bodyfile="DecisionTreeBase.cpp" bodystart="163" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_decision_tree_base" kindref="compound">DecisionTreeBase</ref> is a semi-virtual parent class that contains methods used in both <ref refid="class_decision_tree_classifier" kindref="compound">DecisionTreeClassifier</ref> and DecisionTreeRegressor. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>DecisionTreeBase</label>
        <link refid="class_decision_tree_base"/>
      </node>
      <node id="2">
        <label>DecisionTreeClassifier</label>
        <link refid="class_decision_tree_classifier"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>DecisionNode</label>
        <link refid="struct_decision_node"/>
        <childnode refid="3" relation="usage">
          <edgelabel>splitValue</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>left</edgelabel>
          <edgelabel>right</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>DecisionTreeBase</label>
        <link refid="class_decision_tree_base"/>
        <childnode refid="2" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>Generic</label>
        <link refid="struct_generic"/>
      </node>
    </collaborationgraph>
    <location file="DecisionTreeBase.h" line="28" column="1" bodyfile="DecisionTreeBase.h" bodystart="28" bodyend="84"/>
    <listofallmembers>
      <member refid="class_decision_tree_base_1ab5d14c08c731cca3cd7f55b4d3d58107" prot="private" virt="pure-virtual"><scope>DecisionTreeBase</scope><name>computeLoss</name></member>
      <member refid="class_decision_tree_base_1a4d578791f7c387597de6cd2c88e651dd" prot="public" virt="non-virtual"><scope>DecisionTreeBase</scope><name>DecisionTreeBase</name></member>
      <member refid="class_decision_tree_base_1a0b398b02b7198ec636c1943258739d0c" prot="private" virt="non-virtual"><scope>DecisionTreeBase</scope><name>featureImportance</name></member>
      <member refid="class_decision_tree_base_1a047b0ea407cff2e50a53306c10a12910" prot="private" virt="non-virtual"><scope>DecisionTreeBase</scope><name>findSplit</name></member>
      <member refid="class_decision_tree_base_1a455e5c82b367bf2bdaf8018a3e277599" prot="private" virt="non-virtual"><scope>DecisionTreeBase</scope><name>fit</name></member>
      <member refid="class_decision_tree_base_1a0b752054d30cfe21d5eac24dd97ae878" prot="public" virt="virtual"><scope>DecisionTreeBase</scope><name>fit</name></member>
      <member refid="class_decision_tree_base_1a18c2eac8ecee3c67c06d7cce3aa00dcf" prot="public" virt="non-virtual"><scope>DecisionTreeBase</scope><name>getLossCriterion</name></member>
      <member refid="class_decision_tree_base_1a2142440633f0b8c30519cbe2807d162b" prot="private" virt="pure-virtual"><scope>DecisionTreeBase</scope><name>getTruthVector</name></member>
      <member refid="class_decision_tree_base_1a6db910b5567338562e596c870696c3e1" prot="private" virt="non-virtual"><scope>DecisionTreeBase</scope><name>lossCriterion</name></member>
      <member refid="class_decision_tree_base_1a099475851e6198e7198ca20524634786" prot="private" virt="non-virtual"><scope>DecisionTreeBase</scope><name>maxDepth</name></member>
      <member refid="class_decision_tree_base_1a4eb86c16f490bce74b9cae0515ab7a57" prot="private" virt="non-virtual"><scope>DecisionTreeBase</scope><name>maxFeatures</name></member>
      <member refid="class_decision_tree_base_1ac53d0dceba29023ab1549e9b9d99ec21" prot="private" virt="non-virtual"><scope>DecisionTreeBase</scope><name>minImpurityDecrease</name></member>
      <member refid="class_decision_tree_base_1ae09daa3628fa091d5cb363f25aa622d1" prot="private" virt="non-virtual"><scope>DecisionTreeBase</scope><name>minSamplesLeaf</name></member>
      <member refid="class_decision_tree_base_1a0a818f4869e92888dd574519b80c8320" prot="private" virt="non-virtual"><scope>DecisionTreeBase</scope><name>minSamplesSplit</name></member>
      <member refid="class_decision_tree_base_1a432499dfd7ba508508f7c77e430e829f" prot="public" virt="pure-virtual"><scope>DecisionTreeBase</scope><name>predict</name></member>
      <member refid="class_decision_tree_base_1a3ddba18e63e6835511456cc714de4360" prot="private" virt="non-virtual"><scope>DecisionTreeBase</scope><name>printSpaces</name></member>
      <member refid="class_decision_tree_base_1ad7d66f6b761f0011b3d140eeae5c9109" prot="private" virt="non-virtual"><scope>DecisionTreeBase</scope><name>printTree</name></member>
      <member refid="class_decision_tree_base_1a73a58b0c975ca8d23275026fe154e6c9" prot="public" virt="non-virtual"><scope>DecisionTreeBase</scope><name>printTree</name></member>
      <member refid="class_decision_tree_base_1a1310b75d0f505e481c31c8302f88e5ec" prot="private" virt="pure-virtual"><scope>DecisionTreeBase</scope><name>printTruthVector</name></member>
      <member refid="class_decision_tree_base_1aa23536b4de629085e0609a013fccc25e" prot="protected" virt="non-virtual"><scope>DecisionTreeBase</scope><name>root</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
